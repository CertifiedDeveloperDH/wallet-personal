server.port=8090
spring.application.name=gateway
spring.config.import=optional:configserver: instead
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

spring.cloud.gateway.routes[0].id=cuenta-service
spring.cloud.gateway.routes[0].uri=lb://API-CUENTA
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/cuenta/**
spring.cloud.gateway.routes[0].filters[0]=TokenRelay  # Propaga el JWT a los microservicios

spring.cloud.gateway.routes[1].id=transacciones-service
spring.cloud.gateway.routes[1].uri=lb://API-TRANSACCIONES
spring.cloud.gateway.routes[1].predicates[0]=Path=/api-transacciones/**
spring.cloud.gateway.routes[1].filters[0]=TokenRelay

# Ruta para el servicio de usuario (api-usuario)
spring.cloud.gateway.routes[2].id=usuario-service
spring.cloud.gateway.routes[2].uri=lb://API-USUARIO
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/usuarios/**
spring.cloud.gateway.routes[2].filters[0]=TokenRelay

spring.cloud.gateway.routes[3].id=card-service
spring.cloud.gateway.routes[3].uri=lb://API-CARD
spring.cloud.gateway.routes[3].predicates[0]=Path=/cards/**
spring.cloud.gateway.routes[3].filters[0]=TokenRelay

# Configuración de Keycloak para validar JWTs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9100/realms/mi-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9100/realms/mi-realm/protocol/openid-connect/certs
#spring:
#cloud:
#gateway:
#routes:
#- id: cuenta-service
#uri: lb://API-CUENTA
#predicates:
#- Path=/api-cuenta/**
#- id: transacciones-service
#uri: lb://API-TRANSACCIONES
#predicates:
#- Path=/api-transacciones/**
